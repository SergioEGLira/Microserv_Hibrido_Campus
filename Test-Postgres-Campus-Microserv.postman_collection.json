{
	"info": {
		"_postman_id": "47fb7703-afca-4af6-a2da-360e920ef695",
		"name": "Test-Postgres-Campus-Microserv",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15549246"
	},
	"item": [
		{
			"name": "Teste logger server.port api-authusers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api-authuser/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api-authuser",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2",
							"disabled": true
						},
						{
							"key": "size",
							"value": "2",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "username,desc",
							"disabled": true
						},
						{
							"key": "userType",
							"value": "STUDENT",
							"disabled": true
						},
						{
							"key": "email",
							"value": "@meiryjoias.com.br",
							"disabled": true
						},
						{
							"key": "userStatus",
							"value": "ACTIVE",
							"disabled": true
						},
						{
							"key": "courseId",
							"value": "1266380e-204b-48d0-96b4-692f692ca8ad",
							"disabled": true
						}
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Not Found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Teste logger server.port api-course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"courseLevel\": \"BEGINNER\",\r\n  \"courseStatus\": \"CONCLUDED\",\r\n  \"description\": \"update description 02\",\r\n  \"imageUrl\": \"http://image 02 update\",\r\n  \"name\": \"update name 02\",\r\n  \"userInstructor\": \"0246380e-204b-48d0-96b4-692f692ca8ad\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api-course/courses/getAllCoursesPageable",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api-course",
						"courses",
						"getAllCoursesPageable"
					],
					"query": [
						{
							"key": "page",
							"value": "0",
							"disabled": true
						},
						{
							"key": "size",
							"value": "5",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "name,desc",
							"disabled": true
						},
						{
							"key": "courseLevel",
							"value": "ADVANCED",
							"disabled": true
						},
						{
							"key": "courseStatus",
							"value": "INPROGRESS",
							"disabled": true
						},
						{
							"key": "name",
							"value": "09",
							"disabled": true
						},
						{
							"key": "userId",
							"value": "8866380e-204b-48d0-96b4-692f692ca8ad",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "registerUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Body\", function(){\r",
							"console.log(pm.response.text());\r",
							"pm.expect(pm.response.text()).to.includes(\"new.isabel@email.com\");\r",
							"pm.expect(pm.response.text()).to.includes(\"630.874.669-05\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"cpf\": \"630.874.669-05\",\n  \"email\": \"4xxnew.isabel@email.com\",\n  \"fullName\": \"New Isabel Maria\",   \n  \"password\": \"04newPassword\",\n  \"phoneNumber\": \"(11)11111-1111\",\n  \"username\": \"04xxNewIsabel\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api-authuser}}/auth/signup",
					"host": [
						"{{api-authuser}}"
					],
					"path": [
						"auth",
						"signup"
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cpf\": \"do veniam\",\n  \"email\": \"sunt nisi\",\n  \"fullName\": \"nisi ipsum Ut\",\n  \"imageUrl\": \"elit ullamco sed ipsum laborum\",\n  \"oldPassword\": \"Excepteur proident\",\n  \"password\": \"Duis esse\",\n  \"phoneNumber\": \"irure sit\",\n  \"username\": \"cu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cpf\": \"do veniam\",\n  \"email\": \"sunt nisi\",\n  \"fullName\": \"nisi ipsum Ut\",\n  \"imageUrl\": \"elit ullamco sed ipsum laborum\",\n  \"oldPassword\": \"Excepteur proident\",\n  \"password\": \"Duis esse\",\n  \"phoneNumber\": \"irure sit\",\n  \"username\": \"cu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cpf\": \"do veniam\",\n  \"email\": \"sunt nisi\",\n  \"fullName\": \"nisi ipsum Ut\",\n  \"imageUrl\": \"elit ullamco sed ipsum laborum\",\n  \"oldPassword\": \"Excepteur proident\",\n  \"password\": \"Duis esse\",\n  \"phoneNumber\": \"irure sit\",\n  \"username\": \"cu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cpf\": \"do veniam\",\n  \"email\": \"sunt nisi\",\n  \"fullName\": \"nisi ipsum Ut\",\n  \"imageUrl\": \"elit ullamco sed ipsum laborum\",\n  \"oldPassword\": \"Excepteur proident\",\n  \"password\": \"Duis esse\",\n  \"phoneNumber\": \"irure sit\",\n  \"username\": \"cu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Not Found",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cpf\": \"do veniam\",\n  \"email\": \"sunt nisi\",\n  \"fullName\": \"nisi ipsum Ut\",\n  \"imageUrl\": \"elit ullamco sed ipsum laborum\",\n  \"oldPassword\": \"Excepteur proident\",\n  \"password\": \"Duis esse\",\n  \"phoneNumber\": \"irure sit\",\n  \"username\": \"cu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body\", function(){\r",
							"var responseJson = pm.response.json();\r",
							"pm.expect(responseJson.cpf).to.eql(\"475.730.770-50\");\r",
							"pm.expect(responseJson.fullName).to.eql(\"New Fernanda Antonella Sophia Barbosa\");\r",
							"pm.expect(responseJson.phoneNumber).to.eql(\"(00)00000-0000\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"cpf\": \"804.890.227-31\",\n  \"fullName\": \"New Sophie Débora Sebastiana Rodrigues\",\n  \"phoneNumber\": \"(11)00000-0000\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api-authuser}}/users/3266380e-204b-48d0-96b4-692f692ca8ad",
					"host": [
						"{{api-authuser}}"
					],
					"path": [
						"users",
						"3266380e-204b-48d0-96b4-692f692ca8ad"
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cpf\": \"do veniam\",\n  \"email\": \"sunt nisi\",\n  \"fullName\": \"nisi ipsum Ut\",\n  \"imageUrl\": \"elit ullamco sed ipsum laborum\",\n  \"oldPassword\": \"Excepteur proident\",\n  \"password\": \"Duis esse\",\n  \"phoneNumber\": \"irure sit\",\n  \"username\": \"cu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cpf\": \"do veniam\",\n  \"email\": \"sunt nisi\",\n  \"fullName\": \"nisi ipsum Ut\",\n  \"imageUrl\": \"elit ullamco sed ipsum laborum\",\n  \"oldPassword\": \"Excepteur proident\",\n  \"password\": \"Duis esse\",\n  \"phoneNumber\": \"irure sit\",\n  \"username\": \"cu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cpf\": \"do veniam\",\n  \"email\": \"sunt nisi\",\n  \"fullName\": \"nisi ipsum Ut\",\n  \"imageUrl\": \"elit ullamco sed ipsum laborum\",\n  \"oldPassword\": \"Excepteur proident\",\n  \"password\": \"Duis esse\",\n  \"phoneNumber\": \"irure sit\",\n  \"username\": \"cu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cpf\": \"do veniam\",\n  \"email\": \"sunt nisi\",\n  \"fullName\": \"nisi ipsum Ut\",\n  \"imageUrl\": \"elit ullamco sed ipsum laborum\",\n  \"oldPassword\": \"Excepteur proident\",\n  \"password\": \"Duis esse\",\n  \"phoneNumber\": \"irure sit\",\n  \"username\": \"cu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Not Found",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cpf\": \"do veniam\",\n  \"email\": \"sunt nisi\",\n  \"fullName\": \"nisi ipsum Ut\",\n  \"imageUrl\": \"elit ullamco sed ipsum laborum\",\n  \"oldPassword\": \"Excepteur proident\",\n  \"password\": \"Duis esse\",\n  \"phoneNumber\": \"irure sit\",\n  \"username\": \"cu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Image",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body\", function(){\r",
							"var responseJson = pm.response.json();\r",
							"pm.expect(responseJson.imageUrl).to.eql(\"new imageUrl\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"imageUrl\": \"1xnew imageUrl\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api-authuser}}/users/3266380e-204b-48d0-96b4-692f692ca8ad/image",
					"host": [
						"{{api-authuser}}"
					],
					"path": [
						"users",
						"3266380e-204b-48d0-96b4-692f692ca8ad",
						"image"
					]
				}
			},
			"response": []
		},
		{
			"name": "Instructors Subscription",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body\", function(){\r",
							"console.log(pm.response.text());\r",
							"pm.expect(pm.response.text()).to.includes(\"3266380e-204b-48d0-96b4-692f692ca8ad\");\r",
							"pm.expect(pm.response.text()).to.includes(\"INSTRUCTOR\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": \"d397c831-c1ed-47f1-b116-41b50a1e77a3\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api-authuser}}/instructors/subscription",
					"host": [
						"{{api-authuser}}"
					],
					"path": [
						"instructors",
						"subscription"
					]
				}
			},
			"response": []
		},
		{
			"name": "New course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Body\", function(){\r",
							"console.log(pm.response.text());\r",
							"pm.expect(pm.response.text()).to.includes(\"New name\");\r",
							"pm.expect(pm.response.text()).to.includes(\"New description\");\r",
							"pm.expect(pm.response.text()).to.includes(\"http://image new\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"courseLevel\": \"BEGINNER\",\r\n  \"courseStatus\": \"INPROGRESS\",\r\n  \"description\": \"New description\",\r\n  \"imageUrl\": \"http://image new\",\r\n  \"name\": \"New name\",\r\n  \"userInstructor\": \"2766380e-204b-48d0-96b4-692f692ca8ad\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api-course}}/courses",
					"host": [
						"{{api-course}}"
					],
					"path": [
						"courses"
					]
				}
			},
			"response": []
		},
		{
			"name": "* New course - erro UserInstructor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Body\", function(){\r",
							"console.log(pm.response.text());\r",
							"pm.expect(pm.response.text()).to.includes(\"UserInstructorError\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"courseLevel\": \"BEGINNER\",\r\n  \"courseStatus\": \"INPROGRESS\",\r\n  \"description\": \"2 New description\",\r\n  \"imageUrl\": \"2 http://image new\",\r\n  \"name\": \"2 New name\",\r\n  \"userInstructor\": \"6566380e-204b-48d0-96b4-692f692ca8ad\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api-course}}/courses",
					"host": [
						"{{api-course}}"
					],
					"path": [
						"courses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Subscription user/course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": \"559ed112-47ca-4d1c-9450-fa8716aaeca3\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api-course}}/courses/1296380e-204b-48d0-96b4-692f692ca8ad/users/subscription",
					"host": [
						"{{api-course}}"
					],
					"path": [
						"courses",
						"1296380e-204b-48d0-96b4-692f692ca8ad",
						"users",
						"subscription"
					]
				}
			},
			"response": []
		},
		{
			"name": "Subscription user/course - erro userNotFound",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": \"00e9cc32-c74e-459c-820d-1ae0530d59c8\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api-course}}/courses/438fa12f-93c6-4b85-a13a-369eb796605f/users/subscription",
					"host": [
						"{{api-course}}"
					],
					"path": [
						"courses",
						"438fa12f-93c6-4b85-a13a-369eb796605f",
						"users",
						"subscription"
					]
				}
			},
			"response": []
		},
		{
			"name": "Subscription user/course - erro courseNotFound",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": \"83e9cc32-c74e-459c-820d-1ae0530d59c8\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api-course}}/courses/008fa12f-93c6-4b85-a13a-369eb796605f/users/subscription",
					"host": [
						"{{api-course}}"
					],
					"path": [
						"courses",
						"008fa12f-93c6-4b85-a13a-369eb796605f",
						"users",
						"subscription"
					]
				}
			},
			"response": []
		},
		{
			"name": "All Users By Course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api-course}}/courses/1276380e-204b-48d0-96b4-692f692ca8ad/users",
					"host": [
						"{{api-course}}"
					],
					"path": [
						"courses",
						"1276380e-204b-48d0-96b4-692f692ca8ad",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "0",
							"disabled": true
						},
						{
							"key": "size",
							"value": "1",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "username,desc",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "All Courses By User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api-authuser}}/users/6566380e-204b-48d0-96b4-692f692ca8ad/courses",
					"host": [
						"{{api-authuser}}"
					],
					"path": [
						"users",
						"6566380e-204b-48d0-96b4-692f692ca8ad",
						"courses"
					],
					"query": [
						{
							"key": "page",
							"value": "1",
							"disabled": true
						},
						{
							"key": "size",
							"value": "1",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "name,desc",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body\", function(){\r",
							"console.log(pm.response.text());\r",
							"pm.expect(pm.response.text()).to.includes(\"User deletado com sucesso.\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "{{api-authuser}}/users/83e9cc32-c74e-459c-820d-1ae0530d59c8",
					"host": [
						"{{api-authuser}}"
					],
					"path": [
						"users",
						"83e9cc32-c74e-459c-820d-1ae0530d59c8"
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "9cd13997-652b-799c-e3a1-11ab905a5032",
									"description": "(Required) userId"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "No Content",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "9cd13997-652b-799c-e3a1-11ab905a5032",
									"description": "(Required) userId"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "9cd13997-652b-799c-e3a1-11ab905a5032",
									"description": "(Required) userId"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "9cd13997-652b-799c-e3a1-11ab905a5032",
									"description": "(Required) userId"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "User - erro userNotFound",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Body\", function(){\r",
							"console.log(pm.response.text());\r",
							"pm.expect(pm.response.text()).to.includes(\"User não encontrado...\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "{{api-authuser}}/users/00e9cc32-c74e-459c-820d-1ae0530d59c8",
					"host": [
						"{{api-authuser}}"
					],
					"path": [
						"users",
						"00e9cc32-c74e-459c-820d-1ae0530d59c8"
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "9cd13997-652b-799c-e3a1-11ab905a5032",
									"description": "(Required) userId"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "No Content",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "9cd13997-652b-799c-e3a1-11ab905a5032",
									"description": "(Required) userId"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "9cd13997-652b-799c-e3a1-11ab905a5032",
									"description": "(Required) userId"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "9cd13997-652b-799c-e3a1-11ab905a5032",
									"description": "(Required) userId"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body\", function(){\r",
							"console.log(pm.response.text());\r",
							"pm.expect(pm.response.text()).to.includes(\"Deletamos o curso com sucesso!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{api-course}}/courses/1296380e-204b-48d0-96b4-692f692ca8ad",
					"host": [
						"{{api-course}}"
					],
					"path": [
						"courses",
						"1296380e-204b-48d0-96b4-692f692ca8ad"
					]
				}
			},
			"response": []
		},
		{
			"name": "course - erro notFound",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Body\", function(){\r",
							"console.log(pm.response.text());\r",
							"pm.expect(pm.response.text()).to.includes(\"Curso não existe.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{api-course}}/courses/1296380e-204b-48d0-96b4-692f692ca8ad",
					"host": [
						"{{api-course}}"
					],
					"path": [
						"courses",
						"1296380e-204b-48d0-96b4-692f692ca8ad"
					]
				}
			},
			"response": []
		},
		{
			"name": ">>> ApplicationGlobalConfigs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body\", function(){\r",
							"console.log(pm.response.text());\r",
							"pm.expect(pm.response.text()).to.includes(\"https://github.com/SergioEGLira/config-server-repo-campus\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8888/application/main",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"application",
						"main"
					]
				}
			},
			"response": []
		},
		{
			"name": ">>> AuthuserConfigs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body\", function(){\r",
							"console.log(pm.response.text());\r",
							"pm.expect(pm.response.text()).to.includes(\"https://github.com/SergioEGLira/config-server-repo-campus\");\r",
							"pm.expect(pm.response.text()).to.includes(\"http://api-course/api-course/\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "123cs",
							"type": "string"
						},
						{
							"key": "username",
							"value": "configserver",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8888/api-authuser/main",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"api-authuser",
						"main"
					]
				}
			},
			"response": []
		},
		{
			"name": ">>> Test RefreshScope",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body\", function(){\r",
							"console.log(pm.response.text());\r",
							"pm.expect(pm.response.text()).to.includes(\"Testando o refreshscope.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api-authuser}}/refreshscope",
					"host": [
						"{{api-authuser}}"
					],
					"path": [
						"refreshscope"
					]
				}
			},
			"response": []
		},
		{
			"name": ">>> Test actuator refresh",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{api-authuser}}/actuator/refresh",
					"host": [
						"{{api-authuser}}"
					],
					"path": [
						"actuator",
						"refresh"
					]
				}
			},
			"response": []
		},
		{
			"name": ">>> CourseConfigs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body\", function(){\r",
							"console.log(pm.response.text());\r",
							"pm.expect(pm.response.text()).to.includes(\"https://github.com/SergioEGLira/config-server-repo-campus\");\r",
							"pm.expect(pm.response.text()).to.includes(\"http://api-authuser/api-authuser/\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8888/api-course/main",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8888",
					"path": [
						"api-course",
						"main"
					]
				}
			},
			"response": []
		},
		{
			"name": "Subscription user/course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": \"5466380e-204b-48d0-96b4-692f692ca8ad\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api-course}}/courses/1256380e-204b-48d0-96b4-692f692ca8ad/users/subscription",
					"host": [
						"{{api-course}}"
					],
					"path": [
						"courses",
						"1256380e-204b-48d0-96b4-692f692ca8ad",
						"users",
						"subscription"
					]
				}
			},
			"response": []
		},
		{
			"name": "All Notifications by User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{api-notification}}/users/5466380e-204b-48d0-96b4-692f692ca8ad/notifications",
					"host": [
						"{{api-notification}}"
					],
					"path": [
						"users",
						"5466380e-204b-48d0-96b4-692f692ca8ad",
						"notifications"
					],
					"query": [
						{
							"key": "page",
							"value": "1",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Notification Read/Created",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"notificationStatus\": \"CREATED\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api-notification}}/users/9366380e-204b-48d0-96b4-692f692ca8ad/notifications/a446380e-204b-48d0-96b4-692f692ca8ad",
					"host": [
						"{{api-notification}}"
					],
					"path": [
						"users",
						"9366380e-204b-48d0-96b4-692f692ca8ad",
						"notifications",
						"a446380e-204b-48d0-96b4-692f692ca8ad"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllUsersPaged",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Total de objetos são 01\", function(){\r",
							"var responseJson = pm.response.json();\r",
							"pm.expect(responseJson.content).length(1);\r",
							"});\r",
							"\r",
							"pm.test(\"creationDate/lastUpdateDate\", function(){\r",
							"var responseJson = pm.response.json();\r",
							"pm.expect(responseJson.content[0].creationDate).to.not.be.null;\r",
							"pm.expect(responseJson.content[0].lastUpdateDate).to.not.be.null;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "04newPassword",
							"type": "string"
						},
						{
							"key": "username",
							"value": "04xxNewIsabel",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "*/*"
					}
				],
				"url": {
					"raw": "{{api-authuser}}/users",
					"host": [
						"{{api-authuser}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2",
							"disabled": true
						},
						{
							"key": "size",
							"value": "2",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "username,desc",
							"disabled": true
						},
						{
							"key": "userType",
							"value": "STUDENT",
							"disabled": true
						},
						{
							"key": "email",
							"value": "@meiryjoias.com.br",
							"disabled": true
						},
						{
							"key": "userStatus",
							"value": "ACTIVE",
							"disabled": true
						},
						{
							"key": "courseId",
							"value": "778445d9-6013-422f-91ef-1e53993f57e7",
							"disabled": true
						}
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "*/*"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Forbidden",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Not Found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "***Auth Login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"04xxNewIsabel\",\r\n    \"password\":\"04newPassword\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{api-authuser}}/auth/login",
					"host": [
						"{{api-authuser}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		}
	]
}